#!/usr/bin/env bash

[[ -t 1 && -t 0 ]] || exit
LANG=C

getkey () {
  while read -rn1; do
    case $REPLY in
      [qQ]) exit ;;
      [wWKk]) key=UP; return ;;
      [aAHh]) key=LEFT; return ;;
      [sSJj]) key=DOWN; return ;;
      [dDLl]) key=RIGHT; return ;;
      [[:digit:]]) key=$REPLY; return ;;
      $'\e') ;;
      *) continue
    esac
    read -rn1
    [[ $REPLY = '[' ]] || continue
    read -rn1
    case $REPLY in
      A) key=UP; return ;;
      D) key=LEFT; return ;;
      B) key=DOWN; return ;;
      C) key=RIGHT; return ;;
      M) # mouse
        read -rn1 -d '' 'mouse[0]' # read 3 times to avoid \0
        read -rn1 -d '' 'mouse[1]'
        read -rn1 -d '' 'mouse[2]'
        printf -v 'mouse[0]' %d "'${mouse[0]}"
        printf -v 'mouse[1]' %d "'${mouse[1]}"
        printf -v 'mouse[2]' %d "'${mouse[2]}"
        if (( (mouse[0] & 3) == 0 )); then # mouse button 1
          # xterm reports position + 32
          (( mouse[1] -= 32 ))
          (( mouse[2] -= 32 ))

          key=MOUSE
          return
        fi
    esac
  done
}


clear=$'\e[H\e[2J'
cup0=$'\e[H'

title='e.Do slider control'
header() {
  header=
  for (( i = 0; i < (lines - 14) / 2; i++ )); do
    header+=$'\n'
  done
  for (( i = 0; i < (cols - ${#title}) / 2; i++ )); do
    header+=' '
  done
  header+=$title$'\n\n'
  headersize=${header//[!$'\n']}
  headersize=${#headersize}
}

prompt () {
  prompt=
  for (( i = 0; i < (cols - 4) / 2; i++ )); do
    prompt+=' '
  done
}

term () {
  cols=$(tput cols) lines=$(tput lines)
  (( range = (cols - 10) / 100 ))
  (( range = range > 0 ? range : 1 ))
  printf %s "$clear"

  header
  prompt
}

if (( BASH_VERSINFO[0] > 4 || (BASH_VERSINFO[0] == 4 && BASH_VERSINFO[1] >= 4 ) )); then
  trap 'term; draw' winch
fi




  mousemode=$'\e[?1002h' # button event mode
nomousemode=$'\e[?1002l'
  altscreen=$'\e[?1049h'
noaltscreen=$'\e[?1049l'
    showcur=$'\e[?25h'
  noshowcur=$'\e[?25l'
setup () {
  [[ $ttymode ]] && stty "$ttymode"
  printf %s   "$mousemode"   "$altscreen" "$noshowcur"
  stty -echo
}

cleanup () {
  ttymode=$(stty -g)
  printf %s "$nomousemode" "$noaltscreen"   "$showcur"
  stty sane
}

setup
trap exit int
trap cleanup exit
trap 'cleanup; kill -STOP "$$"' tstp
trap 'setup; draw' cont





slider () {
  # todo: rewrite me please
  var=
  for (( i = 4; i < cols - 6; i++ )) do
    if (( (i - 4) * 101 > pos[$1] * (cols - 10) - (cols - 10) &&
          (i - 4) * 101 < pos[$1] * (cols - 10) + (cols - 10) )); then
      var+=C
    else
      var+=S
    fi
  done

  var=${var//CS/C>S}
  var=${var//SC/S<C}
  var=${var/#C/<C}
  var=${var/#S/>S}
  var=${var/%C/<C}
  var=${var/%S/S>}
  var=${var//[CS]/ }
  var=${var//>/$sliderbg}
  var=${var//</$cursor}

  var="  0 $var"
  var+="$reset 100  "
  printf "%s\\r" "$var"
}


term
cursor=$'\e[41m'
reset=$'\e[m'


draw () {
  printf %s "$cup0" "$header"
  for s in {0..4}; do
    if (( s == slider )); then
      sliderbg=$'\e[42m'
    else
      sliderbg=$'\e[43m'
    fi
    slider "$s"
    echo
    printf '%*s\e[K\n' "$(( cols / 2 ))" "${pos[s]}"
  done

  s=5
  if (( s == slider )); then
    sliderbg=$'\e[42m'
  else
    sliderbg=$'\e[43m'
  fi
  slider "$s"
  echo
  printf '%*s\e[J\n' "$(( cols / 2 ))" "${pos[s]}"
}

pos=(50 50 50 50 50 50)


draw
while getkey; do
  change=0
  case $key in
     LEFT) move=j; (( pos[slider] = pos[slider] >   0 ? (change = 1, pos[slider] - 1) : pos[slider] )) ;;
    RIGHT) move=j; (( pos[slider] = pos[slider] < 100 ? (change = 1, pos[slider] + 1) : pos[slider] )) ;;
       UP) move=j; (( slider = slider > 0 ? (change = 1, slider - 1) : slider )) ;;
     DOWN) move=j; (( slider = slider < 5 ? (change = 1, slider + 1) : slider )) ;;

    [[:digit:]])
      move=m
      stty sane
      printf %s "$showcur" "$nomousemode"

      read -e -i "$key" -p "$prompt"
      if [[ $REPLY =~ ^-?[0-9]+$ ]]; then
        REPLY=$((10#$REPLY))
        (( REPLY < 0 )) && REPLY=0
        (( REPLY > 99 )) && REPLY=100
        pos[slider]=$REPLY
      fi

      printf %s "$noshowcur" "$mousemode"
      stty -echo
      change=1 ;;

    MOUSE)
      move=m
      if (( mouse[1] > 4 && mouse[1] < cols - 5 )); then
        if (( (mouse[2] - headersize) % 2 )); then
          (( tmp = (mouse[2] - headersize) / 2 ))
          if (( tmp <= 5 )); then
            (( pos[slider=tmp] = (mouse[1] - 4) * 100 / (cols - 10) ))
            change=1
          fi
        fi
      fi
      ;;
  esac
  (( change )) && draw
done
